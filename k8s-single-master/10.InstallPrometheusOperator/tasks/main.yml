---

# tasks file for 05_install_prometheus

- name: Checking if helm already exists
  command: which helm
  register: results
  ignore_errors: yes
  
- name: Deleting Old Helm setup ( if exists )
#  become: yes
  command: rm -rf $(which helm)
  when: results.stdout | regex_search('\/bin\/helm')
  
- name: Downloading helm installation scripts
  uri:
    url: https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    dest: /home/get_helm.sh
    mode: '0777'

- name: Executing installation script
  script:  /home/get_helm.sh
  
- name: Add repo for k8
  command: helm repo add stable https://charts.helm.sh/stable

- name: Checking if release 'metrics' already exists in helm
  shell: helm list -A
  register: helm_list
  
- name: Deleting old release
  shell: helm uninstall metrics -n monitoring
  when: helm_list.stdout | regex_search('metrics')

- name: Checking if namespace 'monitoring' already exists in K8
  shell: kubectl get ns
  register: results  

- name: Deleting old namespace
  shell: kubectl delete ns monitoring
  when: results.stdout | regex_search('monitoring')


- name: Creating namespace for prometheus and grafana
  command: kubectl create namespace monitoring 

- name: Add repo for prometheus
  command: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts


- name: Update helm repo
  command: helm repo update


- name: Getting Prometheus-Operator values
  command: helm inspect values prometheus-community/kube-prometheus-stack
  register: values

- name: Moving values to file
  copy: 
    content: "{{ values.stdout }}"
    dest: /home/prometheusOperator.yaml

- name: Add pyyaml module
  command: python -m pip install pyyaml

- name: Updating Grafana Service type to NodePort
  yedit:
    src: /home/prometheusOperator.yaml
    key: grafana.service
    value:
      type: 
            NodePort
      portName: 
            service

- name: Installing Prometheus Operator
  command: helm install metrics stable/prometheus-operator --values /home/prometheusOperator.yaml -n monitoring
  # notify:
  #   - get grafana details
