worker_processes 1;

events {
    worker_connections 1024;
}

http {
    error_log /var/log/nginx/maifuj.com/error.log warn;
    access_log  /var/log/nginx/maifuj.com/access.log ;
    proxy_intercept_errors off;
    proxy_send_timeout 120;
    proxy_read_timeout 300;

    upstream nexus {
        server localhost:8081;
    }
    upstream registry {
        server localhost:5000;
    }
    upstream jenkins {
        server localhost:8080;
    }
    upstream k8s-1-nginx {
        server 172.31.0.110:32080;  # send all trrafic to nginx https(443) controller node port. (k8s master private ip)
    }
    server {
        listen 80;
        listen 443 ssl ;
        server_name nexus.maifuj.com;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        ssl_certificate /etc/ssl/certs/maifuj.com/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/maifuj.com/privkey.pem;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:DHE-RSA-AES128-GCM-SHA256:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";


        keepalive_timeout  5 5;
        proxy_buffering    off;

        # allow large uploads
        client_max_body_size 2G;

        location / {
#         # redirect to docker registry
#         if ($http_user_agent ~ docker ) {
#             proxy_pass http://registry;
#         }
            proxy_pass http://nexus;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto "https";
        }
        location /v2/ {
            proxy_pass http://registry;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto "https";
        }
    }
    server {
        listen 80;
        listen 443 ssl;
        server_name jenkins.maifuj.com;
        ssl_certificate /etc/ssl/certs/maifuj.com/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/maifuj.com/privkey.pem;
        location / {
            proxy_pass http://jenkins;  # Pass traffic to local host, to docker compose jenkins container
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # It sets for whom it will x-forward for?So its for the clinet connect for proxy server.
            # to send traffic back to clint,we are editing below header bofore sending back to client.
            proxy_set_header Host $host;  # Setting xforward for clint with ip of proxy host.
            proxy_set_header X-Real-IP $remote_addr; #value of client ip
            proxy_set_header X-Forwarded-Proto "https"; # sending traffic back to clinet in for of https
        }
    }
    server {
        listen 80;
        listen 443 ssl;
        server_name aws-k8s-1.maifuj.com;
        ssl_certificate /etc/ssl/certs/maifuj.com/fullchain.pem;
        ssl_certificate_key /etc/ssl/certs/maifuj.com/privkey.pem;
        location / {
            rewrite /(.*) /$1 break;
            proxy_pass http://k8s-1-nginx;  # Pass all traffic to k8s nginx controller.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # It sets a extra header called X-Forwaded which contains clint ip address.
            proxy_set_header Host $host;  # Setting xforward for clint with ip of proxy host.
            proxy_set_header X-Real-IP $remote_addr; #send trrafic to clinet and set xforwaded value of client ip with real client ip.
            proxy_set_header X-Forwarded-Proto "https"; # sending traffic to clinet in for of https
        }
    }
}